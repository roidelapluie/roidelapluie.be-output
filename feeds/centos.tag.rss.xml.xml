<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos on Julien Pivotto</title>
    <link>https://roidelapluie.be/tags/centos/</link>
    <description>Recent content in Centos on Julien Pivotto</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Sep 2015 13:31:42 +0000</lastBuildDate>
    
	<atom:link href="https://roidelapluie.be/tags/centos/rss.xml.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pcsd limitations in EL7</title>
      <link>https://roidelapluie.be/blog/2015/09/17/pcsd/</link>
      <pubDate>Thu, 17 Sep 2015 13:31:42 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/09/17/pcsd/</guid>
      <description>The High Availability stack shipped with CentOS/RHEL 7.1 comes with a daemon called pcsd that provides a web UI to manage a clusters. You can reach it at https://hostname:2224/.
I gave it a try and here is the list of limitations I have found so far:
 It does not show colocation sets at all. It does not show the &amp;ldquo;kind&amp;rdquo; of resource ordering preferences (optional, mandatory, serialize). It does not show failcounts.</description>
    </item>
    
    <item>
      <title>Debugging resource failures with pcs</title>
      <link>https://roidelapluie.be/blog/2015/09/16/pcs-resource-debug/</link>
      <pubDate>Wed, 16 Sep 2015 10:44:54 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/09/16/pcs-resource-debug/</guid>
      <description>Here is a small script to debug pacemaker resource failures in EL7.
It is more helpful than pcs resource debug-start and is based on the clusterlabs wiki.
All you need is to adapt resource= and operation=. You can also make an executable script that will take them as first and second parameter, as below:
#!/bin/bash resource=$1 operation=$2 # Unmanage the resource pcs resource unmanage $resource # OCF_ROOT is needed and might be OS dependent export OCF_ROOT=/usr/lib/ocf # Setting variables for the parameters eval $(pcs resource show $resource| grep Attributes:| awk &amp;#39;{$1=&amp;quot;&amp;quot;; print}&amp;#39;| tr &amp;quot; &amp;quot; &amp;quot;\n&amp;quot;| grep .</description>
    </item>
    
    <item>
      <title>Access Control Lists: the hidden feature of EL7</title>
      <link>https://roidelapluie.be/blog/2015/08/14/acl-el7/</link>
      <pubDate>Fri, 14 Aug 2015 08:36:54 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/08/14/acl-el7/</guid>
      <description>CentOS 7 and its upstream, RHEL7, come by default with the XFS filesystem.
As it looks like it will not change a lot in our everyday sysadmin lifes, this is not strictly true. There is a big side effect of this change: by default, ACL are enabled in that filesystem.
It means that without changing the fstab, you can now give additional rights to files and directories. You can find a lot of guides about how to use them everywhere on the internet.</description>
    </item>
    
    <item>
      <title>Official CentOS boxes for CentOS</title>
      <link>https://roidelapluie.be/blog/2015/08/12/vagrant-centos/</link>
      <pubDate>Wed, 12 Aug 2015 09:10:52 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/08/12/vagrant-centos/</guid>
      <description>CentOS has published in June Vagrant Boxes for both Libvirt and VirtualBox provider. I will focus on the VirtualBox one.
Those images are great for many reasons:
 They come directly from the CentOS project, so it is reasonable to trust them They do not come with any 3rd party repositories (and so, without Puppet/Chef&amp;hellip;) They are minimal images They support multiple providers  They contain what is needed for basic tasks, like the vagrant user so vagrant works.</description>
    </item>
    
    <item>
      <title>Puppet Server</title>
      <link>https://roidelapluie.be/blog/2014/12/09/puppet-server/</link>
      <pubDate>Tue, 09 Dec 2014 21:27:27 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/12/09/puppet-server/</guid>
      <description>I have tested Puppet Server, the new puppet master implementation in Clojure. And I am quite happy.
It just works
The first amazing thing was that it did just work the same way as Puppetmaster.
I did not need to change any configuration file. Every custom function and module just worked like before.
I am using the puppet-puppet from the Foreman, which already have a server_implementation parameter. Switching it to puppetserver just did the trick.</description>
    </item>
    
    <item>
      <title>Importing a CA into OpenLDAP</title>
      <link>https://roidelapluie.be/blog/2014/12/05/openldap-ca/</link>
      <pubDate>Fri, 05 Dec 2014 23:42:17 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/12/05/openldap-ca/</guid>
      <description>Here is a quick how to about OpenLDAP under CentOS 6 and a custom Certificate Authority..
OpenLDAP in CentOS 6 is built with NSS to deal with ssl/tls.
When you try to securely connect to a LDAP host that, you will get the following errors:
$ ldapsearch -H ldaps://172.28.5.5 -d -1 [...snip...] TLS: certificate [CN=ldap.inuits.eu,OU=Infra,O=Inuits,ST=Antwerp,C=BE] is not valid - error -8179:Peer&#39;s Certificate issuer is not recognized.. tls_write: want=7, written=7 0000: 15 03 01 00 02 TLS: error: connect - force handshake failure: errno 0 - moznss error -8179 TLS: can&#39;t connect: TLS error -8179:Peer&#39;s Certificate issuer is not recognized.</description>
    </item>
    
    <item>
      <title>3 years of automation with Puppet</title>
      <link>https://roidelapluie.be/blog/2014/11/17/3-years-of-puppet/</link>
      <pubDate>Mon, 17 Nov 2014 22:24:13 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/11/17/3-years-of-puppet/</guid>
      <description>This article has been triggered by M@ttias.be&amp;rsquo;s article.
I have been working for Inuits for 3 years, with Puppet 2.6. By that time Puppet 0.23 was still around in many places. Here are some lessons I&amp;rsquo;ve learned during these years.
Your Puppet code is code This is one of the first lessons I&amp;rsquo;ve learned. In the many environments I&amp;rsquo;ve seen, some of them use some git hooks/rsync/whatever to deploy the puppet code to the different platforms.</description>
    </item>
    
    <item>
      <title>A classical pulp upgrade ....</title>
      <link>https://roidelapluie.be/blog/2014/10/08/pulp-horror-fest/</link>
      <pubDate>Wed, 08 Oct 2014 09:27:12 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/10/08/pulp-horror-fest/</guid>
      <description>Yesterday I did upgrade a pulp instance from pulp 2.2 to pulp 2.4. Here is my story&amp;hellip;
Upgrading pulp seems very very simple. You update the RPMs then you run the migration script, pulp-manage-db. Well, at least that&amp;rsquo;s the theory.
First step: packages changes The release note tell us a couple of things: some packages to install, some configuration files to save&amp;hellip;
So here we go:
 Install some qpid packages Upgrade mongodb to 2.</description>
    </item>
    
    <item>
      <title>EPEL 7 released</title>
      <link>https://roidelapluie.be/blog/2014/09/04/epel7/</link>
      <pubDate>Thu, 04 Sep 2014 22:50:49 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/09/04/epel7/</guid>
      <description>EPEL 7 has been released. It contains interesting packages:
 ansible (orchestration) collectd (monitoring) mariadb-galera (database replication) mate (gnome 2 fork) mcollective (orchestration) munin (monitoring; version 2) puppet (configuration management, latest version) sl :) varnish (caching)  And obviously a lot of other stuff to discover.
 EPEL wiki page List of packages Puppet module stahnma-epel  </description>
    </item>
    
    <item>
      <title>Pcs support merged into puppetlabs-corosync</title>
      <link>https://roidelapluie.be/blog/2014/07/02/puppetlabs-corosync-pcs/</link>
      <pubDate>Wed, 02 Jul 2014 08:32:42 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/07/02/puppetlabs-corosync-pcs/</guid>
      <description>Great news for people using an el-based distribution and the puppetlabs-corosync puppet module: pcs support has been merged into master.
This change is important because it means that all the RPM required for these providers are in the main repositories, which ensure they are tested and supported.
Starting from CentOS 6.4, the crm shell was not provided by Red Hat anymore, but the puppet module was using that package in its only provider for custom types.</description>
    </item>
    
    <item>
      <title>Puppet 3.6.1 depreciation warning</title>
      <link>https://roidelapluie.be/blog/2014/05/26/puppet-361-depreciation/</link>
      <pubDate>Mon, 26 May 2014 10:48:41 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/05/26/puppet-361-depreciation/</guid>
      <description>Dear puppet users using a yum-based distribution1, once you will upgrade to puppet 3.6.1, you will notice the following warning message each time you use a package type:
Warning: The package type&#39;s allow_virtual parameter will be changing its default value from false to true in a future release. If you do not want to allow virtual packages, please explicitly set allow_virtual to false. (at /usr/lib/ruby/site_ruby/1.8/puppet/type.rb:816:in `set_default&#39;)  There is nothing you can do with that except setting a global parameter in your puppet tree, as stated in the release notes:</description>
    </item>
    
    <item>
      <title>CentOS users should skip puppet release 3.5.0</title>
      <link>https://roidelapluie.be/blog/2014/04/11/puppet-350-yumrepo/</link>
      <pubDate>Fri, 11 Apr 2014 09:51:14 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/04/11/puppet-350-yumrepo/</guid>
      <description>Dear puppet users using a yum-based distribution, if you use the Yumrepo resource type, don&amp;rsquo;t upgrade to puppet 3.5.0. That resource type has been rewritten and the release has come with very annoying bugs.
Bugs  PUP-2163: yumrepo resource completely broken PUP-2150: yumrepo removable URL properties cannot be set to ‘absent’ PUP-2179: Ensuring absent on a yumrepo removes all repos in the same file PUP-2178: yumrepo ‘descr’ property doesn’t map to the ‘name’ INI property PUP-2181: Setting yumrepo string properties to absent assigns the literal ‘absent’ string  Fixes Fixes have been merged to master and will be released with Puppet 3.</description>
    </item>
    
  </channel>
</rss>