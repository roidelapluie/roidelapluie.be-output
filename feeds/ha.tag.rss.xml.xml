<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HA on Julien Pivotto</title>
    <link>https://roidelapluie.be/tags/ha/</link>
    <description>Recent content in HA on Julien Pivotto</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Sep 2015 13:31:42 +0000</lastBuildDate>
    
	<atom:link href="https://roidelapluie.be/tags/ha/rss.xml.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pcsd limitations in EL7</title>
      <link>https://roidelapluie.be/blog/2015/09/17/pcsd/</link>
      <pubDate>Thu, 17 Sep 2015 13:31:42 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/09/17/pcsd/</guid>
      <description>The High Availability stack shipped with CentOS/RHEL 7.1 comes with a daemon called pcsd that provides a web UI to manage a clusters. You can reach it at https://hostname:2224/.
I gave it a try and here is the list of limitations I have found so far:
 It does not show colocation sets at all. It does not show the &amp;ldquo;kind&amp;rdquo; of resource ordering preferences (optional, mandatory, serialize). It does not show failcounts.</description>
    </item>
    
    <item>
      <title>Debugging resource failures with pcs</title>
      <link>https://roidelapluie.be/blog/2015/09/16/pcs-resource-debug/</link>
      <pubDate>Wed, 16 Sep 2015 10:44:54 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2015/09/16/pcs-resource-debug/</guid>
      <description>Here is a small script to debug pacemaker resource failures in EL7.
It is more helpful than pcs resource debug-start and is based on the clusterlabs wiki.
All you need is to adapt resource= and operation=. You can also make an executable script that will take them as first and second parameter, as below:
#!/bin/bash resource=$1 operation=$2 # Unmanage the resource pcs resource unmanage $resource # OCF_ROOT is needed and might be OS dependent export OCF_ROOT=/usr/lib/ocf # Setting variables for the parameters eval $(pcs resource show $resource| grep Attributes:| awk &amp;#39;{$1=&amp;#34;&amp;#34;; print}&amp;#39;| tr &amp;#34; &amp;#34; &amp;#34;\n&amp;#34;| grep .</description>
    </item>
    
    <item>
      <title>Pcs support merged into puppetlabs-corosync</title>
      <link>https://roidelapluie.be/blog/2014/07/02/puppetlabs-corosync-pcs/</link>
      <pubDate>Wed, 02 Jul 2014 08:32:42 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/07/02/puppetlabs-corosync-pcs/</guid>
      <description>Great news for people using an el-based distribution and the puppetlabs-corosync puppet module: pcs support has been merged into master.
This change is important because it means that all the RPM required for these providers are in the main repositories, which ensure they are tested and supported.
Starting from CentOS 6.4, the crm shell was not provided by Red Hat anymore, but the puppet module was using that package in its only provider for custom types.</description>
    </item>
    
    <item>
      <title>Pt-heartbeat can&#39;t use an undefined value as an ARRAY reference</title>
      <link>https://roidelapluie.be/blog/2014/05/19/pt-heartbeat-array-error/</link>
      <pubDate>Mon, 19 May 2014 22:54:08 +0000</pubDate>
      
      <guid>https://roidelapluie.be/blog/2014/05/19/pt-heartbeat-array-error/</guid>
      <description>Today I got a strange issue with pt-heartbeat.
When I launched pt-heartbeat:
pt-heartbeat --pid /var/opt/inu/pt-heartbeat.pid --update --database \ pth --create-table --socket /var/opt/inu/mysql/mysql.sock --user=pth \ --password=str0ng  I got the following error message:
Can&#39;t use an undefined value as an ARRAY reference at /usr/bin/pt-heartbeat line 4297.  It was because I did not have access to the /tmp/percona-version-check file. The file was created under an other user and the current user could not access it.</description>
    </item>
    
  </channel>
</rss>